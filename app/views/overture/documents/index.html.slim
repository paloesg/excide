- unless @company.investor?
  = render "overture/documents/startup_view"
- else
  = render "overture/documents/investor_view", startups: @startups, startup_id: params[:company_id]

/.row.mb-3.mt-5.ml-3
  .col-sm-12
    - unless @company.investor?
      button.btn.btn-primary.float-right.ml-5 data-target="#newOvertureDocUploads" data-toggle="modal" type="button"
        i.material-icons-outlined.text-white add
        | Upload
      #newOvertureDocUploads.modal.fade aria-hidden="true" aria-labelledby="newOvertureDocumentUploads" role="dialog" tabindex="-1"
        .modal-dialog role="document"
          .modal-content
            .modal-header
              h5#newOvertureDocumentUploads.modal-title Upload Documents
              button.close aria-label="Close" data-dismiss="modal" type="button"
                span aria-hidden="true"  &times;
            .modal-body
              .row.mt-3
                .col-md-12
                  / params[:id] is folder's ID. It is to account for uploading files inside a folder (folder SHOW page)
                  .dashboard-body.overtureMultipleDocumentsUpload#Dashboard data-folder="#{params[:id]}"
      / Don't allow create folder button to be shown if within a folder
      - unless controller_name == 'folders'
        button.btn.btn-white.border.border-secondary.text-primary.float-right.ml-5 data-target="#newFolderUpload" data-toggle="modal" type="button"
          i.material-icons.text-primary.mr-1.mb-1 folder_open
          | New Folder
        #newFolderUpload.modal.fade aria-hidden="true" aria-labelledby="newOvertureFolderUpload" role="dialog" tabindex="-1"
          .modal-dialog role="document"
            .modal-content
              .modal-header
                h5#newOvertureFolderUpload.modal-title Create new folder
                button.close aria-label="Close" data-dismiss="modal" type="button"
                  span aria-hidden="true"  &times;
              .modal-body
                = form_for(@folder, url: overture_folders_path, html: { method: :post }) do |f|
                  .row.mt-3
                    .col-md-12
                      .form-group
                        = f.text_field :name, placeholder: 'New folder', class: 'form-control'
                  .row
                    .col-md-12
                      = f.submit "Save", class: 'btn btn-sm btn-primary float-right'
    / .float-right.mx-5.mt-2
    /   i.material-icons-outlined more_horiz
    h3 Dataroom
    p.mt-5.text-muted
      | Store, share and manage your important documents and access control
      br
      | for different users. Drag and drop your files to upload.
    .row.ml-4.align-items-center#filter-search
      .col.d-flex
        div#filter style="cursor: pointer;"
          span.mr-3
            i.material-icons-outlined.align-middle filter_list
        span.ml-5.mr-3.d-flex
          i.material-icons-outlined.align-middle.mr-1 search
          input.form-control.form-control-sm.border-0.align-middle
    .row.ml-4.my-5.align-items-center#filter-options
      .col.md-12
        span.mr-3
          = select_tag('access', options_for_select(["All access"].concat(@company.users.pluck(:first_name)), selected: params[:access], include_blank: true), class: 'select2 select2-document-access form-control')
        span.mr-3
          = select_tag('qna', options_for_select(["All Q&A Status", "Read", "Unread"], selected: params[:qna], include_blank: true), class: 'select2 select2-document-qna form-control')
        span.mr-3
          = button_tag 'Apply filters', type: 'button', class: 'btn btn-primary documents-filter-button'
        span.align-items-center.ml-5.text-primary#clear-filter style="cursor: pointer;"
          | Clear
    - if controller_name == "folders"
      hr.mb-2
      .row.ml-4
        .col
          ul.breadcrumb.breadcrumb-transparent.breadcrumb-arrow.font-weight-bold.p-0.my-2.font-size-sm
            li.breadcrumb-item
              = link_to "Dataroom", overture_documents_path, class: "text-dark"
            li.breadcrumb-item
              = @folder.name
    hr.mt-2
/- if @folders.empty? && @documents.empty?
  .row.justify-content-center.ml-3
    .col-md-3.text-center.p-4
      = image_pack_tag 'media/src/images/symphony/add-documents@2x.png'
      h2.mt-5 Clean and fresh
      p.mt-4 Let's add some documents to this page! Click on the upload button below to do so.
      button.btn.btn-primary.ml-5 data-target="#newOvertureDocUploads" data-toggle="modal" type="button"
        | + Upload Documents
/- else
  - unless @company.investor?
    table.table.ml-4
      thead
        tr
          th
            input# type="checkbox" name=""/
          th.text-muted Name
          th.text-muted Read Access
          th.text-muted Download Access
          th.text-muted Edit Access
          th.text-muted Last Modified
          th.text-muted Upload By
          th
      tbody.draggable-zone
        - @folders.each_with_index do |folder, index|
          tr.draggable.folders.drawer-row id="#{folder.id}" data-drawer=folder.id
            td
              input.mt-2 type="checkbox" name=""/
            td
              span.mr-5
                i.material-icons-outlined.align-middle folder_open
              span.ml-5
                = link_to folder.name, overture_folder_path(folder.id), class:"text-secondary"
            td id="drawer_toggle_#{folder.id}_0" style="cursor: pointer;"
              = pluralize(folder.permissions.where(can_view: true).length, 'user')
            td id="drawer_toggle_#{folder.id}_1" style="cursor: pointer;"
              = pluralize(folder.permissions.where(can_download: true).length, 'user')
            td id="drawer_toggle_#{folder.id}_2" style="cursor: pointer;"
              = pluralize(folder.permissions.where(can_write: true).length, 'user')
            / td
            /   .dropdown
            /     button.btn.btn-primary-outline.p-0 data-toggle="dropdown"
            /       span data-toggle="tooltip" data-placement="bottom" data-html="true" title="#{@users.map(&:first_name).join("<br/>")}"
            /         - @users.each do |user|
            /           - permission = user.permissions.find_by(permissible_id: folder.id)
            /           - if permission.present?
            /             = image_pack_tag 'media/src/images/motif/avatar-no-photo.svg', class: 'icon-size'
            /     ul.dropdown-menu.p-5
            /       - @users.each do |user|
            /         - permission = user.permissions.find_by(permissible_id: folder.id)
            /         - if permission.present?
            /           .checkbox.mt-2
            /             label.d-flex.align-items-center
            /               = image_pack_tag 'media/src/images/symphony/user-avatar-placeholder.jpg', class: 'icon-size mr-3'
            /               = user.first_name
            /               .ml-5 = check_box_tag "permission", permission.can_view, permission.can_view, data: { user_id: user.id, permissible_id: folder.id, permissible_type: "folder", remote: true, url: url_for(controller: "folders", action: :toggle, id: user.id, permissible_id: folder.id, permissible_type: "view"), method: "POST"}
            / td
            /   .dropdown
            /     button.btn.btn-primary-outline.p-0 data-toggle="dropdown"
            /       span data-toggle="tooltip" data-placement="bottom" data-html="true" title="#{@users.map(&:first_name).join("<br/>")}"
            /         - @users.each do |user|
            /           - permission = user.permissions.find_by(permissible_id: folder.id)
            /           - if permission.present?
            /             = image_pack_tag 'media/src/images/motif/avatar-no-photo.svg', class: 'icon-size'
            /     ul.dropdown-menu.p-5
            /       - @users.each do |user|
            /         - permission = user.permissions.find_by(permissible_id: folder.id)
            /         - if permission.present?
            /           .checkbox.mt-2
            /             label.d-flex.align-items-center
            /               = image_pack_tag 'media/src/images/symphony/user-avatar-placeholder.jpg', class: 'icon-size mr-3'
            /               = user.first_name
            /               .ml-5 = check_box_tag "permission", permission.can_download, permission.can_download, data: { user_id: user.id, permissible_id: folder.id, permissible_type: "folder", remote: true, url: url_for(controller: "folders", action: :toggle, id: user.id, permissible_id: folder.id, permissible_type: "download"), method: "POST"}
            td
              = folder.updated_at.strftime("%d %b %Y (%I:%M%p)")
            td.d-flex
              .d-flex
                = image_pack_tag 'media/src/images/motif/avatar-no-photo.svg', class: 'icon-size mr-3'
                p.mt-1.mr-5 = folder.user&.full_name
            td
              .dropdown
                a.btn.btn-icon.btn-link href="#" aria-expanded="false" aria-haspopup="true" data-toggle="dropdown"
                  i.fa.fa-ellipsis-h.text-secondary.mb-4
                .dropdown-menu.dropdown-menu-right
                  .dropdown-item = link_to "Folder setting", edit_overture_folder_path(folder)
                  .dropdown-item = link_to "Delete", overture_folder_path(folder), method: :delete, data: {confirm: "Are you sure you want to delete folder?"}
          = render 'overture/shared/drawer', permissible: folder, permissible_type: 'folder', name: folder.name, url: overture_folders_path(id: folder.id, format: 'json'), file: folder, path: "overture/folders/", byte_size: Folder.last.descendants.select{|desc| desc.is_a?(Document)}.map{|doc| number_to_human_size(doc.raw_file.byte_size)}.reduce(0, :+)
        - @documents.each_with_index do |d, index|
          tr.drawer-row.draggable id="#{d.id}" data-drawer="#{d.id}"
            td
              input.mt-2 type="checkbox" name=""/
            td data-toggle="modal" data-target="#documentModal#{d.id}" style="cursor: pointer;"
              span.mr-5
                / Find extension (eg .docx, .pdf, .png), split to remove the . , and retrieve the 1st 3 letters to get doc, pdf, png to match the image
                = image_pack_tag "media/src/images/overture/doc.svg"
              span.ml-5
                = d.raw_file.filename
            td id="drawer_toggle_#{d.id}_0" style="cursor: pointer;"
              = pluralize(d.permissions.where(can_view: true).length, 'user')
            td id="drawer_toggle_#{d.id}_1" style="cursor: pointer;"
              = pluralize(d.permissions.where(can_download: true).length, 'user')
            td id="drawer_toggle_#{d.id}_2" style="cursor: pointer;"
              = pluralize(d.permissions.where(can_write: true).length, 'user')
            / td
            /   .dropdown
            /     button.btn.btn-primary-outline.p-0 data-toggle="dropdown"
            /       span data-toggle="tooltip" data-placement="bottom" data-html="true" title="#{@users.map(&:first_name).join("<br/>")}"
            /         - @users.each do |user|
            /           - permission = user.permissions.find_by(permissible_id: d.id)
            /           - if permission.present?
            /             = image_pack_tag 'media/src/images/motif/avatar-no-photo.svg', class: 'icon-size'
            /     ul.dropdown-menu.p-5
            /       - @users.each do |user|
            /         - permission = user.permissions.find_by(permissible_id: d.id)
            /         - if permission.present?
            /           .checkbox.mt-2
            /             label.d-flex.align-items-center
            /               = image_pack_tag 'media/src/images/motif/avatar-no-photo.svg', class: 'icon-size mr-3'
            /               = user.first_name
            /               .ml-5 = check_box_tag "permission", permission.can_view, permission.can_view, data: { user_id: user.id, permissible_id: d.id, remote: true, url: url_for(controller: "documents", action: :toggle, id: user.id, permissible_id: d.id, permissible_type: "view"), method: "POST"}
            / td
            /   .dropdown
            /     button.btn.btn-primary-outline.p-0 data-toggle="dropdown"
            /       span data-toggle="tooltip" data-placement="bottom" data-html="true" title="#{@users.map(&:first_name).join("<br/>")}"
            /         - @users.each do |user|
            /           - permission = user.permissions.find_by(permissible_id: d.id)
            /           - if permission.present?
            /             = image_pack_tag 'media/src/images/motif/avatar-no-photo.svg', class: 'icon-size'
            /     ul.dropdown-menu.p-5
            /       - @users.each do |user|
            /         - permission = user.permissions.find_by(permissible_id: d.id)
            /         - if permission.present?
            /           .checkbox.mt-2
            /             label.d-flex.align-items-center
            /               = image_pack_tag 'media/src/images/motif/avatar-no-photo.svg', class: 'icon-size mr-3'
            /               = user.first_name
            /               .ml-5 = check_box_tag "permission", permission.can_download, permission.can_download, data: { user_id: user.id, permissible_id: d.id, remote: true, url: url_for(controller: "documents", action: :toggle, id: user.id, permissible_id: d.id, permissible_type: "download"), method: "POST"}
            td
              = d.raw_file.attached? ? d.raw_file.created_at.strftime("%d %b %Y (%I:%M%p)") : d.created_at.strftime("%d %b %Y (%I:%M%p)")
            td.d-flex
              .d-flex
                = image_pack_tag 'media/src/images/motif/avatar-no-photo.svg', class: 'icon-size mr-3'
                p.mt-1.mr-5 = d.user&.full_name
            td
              .dropdown
                a.btn.btn-icon.btn-link href="#" aria-expanded="false" aria-haspopup="true" data-toggle="dropdown"
                  i.fa.fa-ellipsis-h.text-secondary.mb-4
                .dropdown-menu.dropdown-menu-right
                  .dropdown-item = link_to "Download", d.raw_file.attached? ? rails_blob_path(d.raw_file, disposition: "attachment") : d.file_url
                  .dropdown-item = link_to "Delete", overture_document_path(d), method: :delete, data: {confirm: "Are you sure you want to delete this document?"}
            = render 'overture/shared/show_document', d: d
          = render 'overture/shared/drawer', permissible: d, permissible_type: 'document', name: d.raw_file.filename, url: overture_documents_path(id: d.id, format: 'json'), path: "overture/documents/", byte_size: number_to_human_size(d.raw_file.byte_size) if d.raw_file.attached?
  - else
    table.table.ml-4
      thead
        tr
          th.text-muted Name
          th.text-muted Shared by
          th
          th
      tbody
        - @folders.each_with_index do |folder, index|
          tr
            td
              span.mr-5
                i.material-icons-outlined.align-middle folder_open
              span.ml-5 = link_to folder.name, overture_folder_path(folder.id), class: "text-secondary"
            td = folder.company.name
            td
              = render 'overture/documents/documents_qna_modal', permissible: folder, topic: @topic
            td
        - @documents.each_with_index do |d, index|
          tr
            td data-toggle="modal" data-target="#documentModal#{d.id}" style="cursor: pointer;"
              span.mr-5
                / Find extension (eg .docx, .pdf, .png), split to remove the . , and retrieve the 1st 3 letters to get doc, pdf, png to match the image
                = image_pack_tag "media/src/images/overture/doc.svg"
              span.ml-5
                = d.raw_file.filename
            td = d.company.name
            td
              = render 'overture/documents/documents_qna_modal', permissible: d, topic: @topic
            - if @user.permissions.find_by(permissible_id: d.id).can_download? or @user.permissions.find_by(permissible_id: d.id).can_write?
              td
                = link_to rails_blob_path(d.raw_file, disposition: "attachment") do
                  i.material-icons-outlined.align-middle.text-primary download
            = render 'overture/shared/show_document', d: d
