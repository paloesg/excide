.row.mb-3.mt-5.ml-3
  .col-sm-12.d-flex.align-items-center
    .mr-5
      h3.text-dark.font-weight-boldest Shared Files
    .ml-auto
      .dropdown
        a.btn.btn-primary.float-right.mr-5.p-2 href="#" aria-expanded="false" aria-haspopup="true" data-toggle="dropdown"
          i.material-icons-outlined.font-size-h2.p-0 add
        .dropdown-menu.dropdown-menu-right
          / these paths are not working
          a.dropdown-item.float-right.ml-5 data-target="#newFolderUpload" data-toggle="modal" type="button" Add new folder
          a.dropdown-item.float-right.ml-5 data-target="#newOvertureDocUploads" data-toggle="modal" type="button" Upload new file
    = render "overture/documents/modals/upload_documents_modal"
    = render "overture/documents/modals/new_folder_modal", folder: @new_folder, parent_folder: @folder
    = link_to overture_roles_path, role: 'button', class: 'btn btn-outline-secondary float-right mr-5' do
      i.material-icons-outlined.text-primary group
      span.ml-2.text-primary.font-weight-bolder Groups
.row.mb-3.ml-3
  .col-sm-12
    p.mt-5
      | Share documents with your investor.
    - if (controller_name == "folders" and @folder.name != "Shared Drive")
      hr.mb-2
      .row
        .col
          ul.breadcrumb.breadcrumb-transparent.breadcrumb-arrow.font-weight-bold.p-0.my-2.font-size-sm
            li.breadcrumb-item
              = link_to "Shared Drive", :back, class: "text-dark"
            li.breadcrumb-item
              = @folder.name
    hr.m-0
- if @folders.empty? && @documents.empty?
  .row.justify-content-center.mt-20
    .col.text-center.p-10
      = image_pack_tag 'media/src/images/overture/dataroom-empty.png', size: "100"
      p.mt-4 No shared documents.
- else
  .table-responsive.h-75
    table.table.ml-4.table-aligned
      thead
        tr
          th#checkedAll style="width: 5%"
            input# type="checkbox" name=""/
          th.text-muted style="width: 35%" Name
          th.text-muted style="width: 10%" Last Modified
          th style="width: 10%"
          - @roles.each do |role|
            th
              a title="#{role.users.map(&:full_name).join("<br/>")}" data-html="true" data-placement="bottom" data-toggle="tooltip" data-trigger="hover" = role.name
      tbody.draggable-zone
        - @folders.each_with_index do |folder, index|
          tr.draggable.folders.drawer-row id="#{folder.id}" data-drawer=folder.id data-permissible-type="folder"
            td
              = check_box_tag "folders[]", folder.id, false, class: "checkSingle mt-2"
            td
              span.mr-5
                i.material-icons-outlined.align-middle folder_open
              span.ml-5
                = link_to folder.name, overture_folder_path(folder.id), class:"text-secondary"
            td
              = folder.updated_at.strftime("%d %b %Y")
            td
              .dropdown
                a.btn.btn-icon.btn-link href="#" aria-expanded="false" aria-haspopup="true" data-toggle="dropdown"
                  i.material-icons-outlined.font-size-h1.text-muted more_horiz
                .dropdown-menu.dropdown-menu-right
                  .dropdown-item = link_to "Activity History", "#", id: "drawer_toggle_#{folder.id}_0"
                  .dropdown-item = link_to "Delete", overture_folder_path(folder), method: :delete, data: {confirm: "Are you sure you want to delete folder?"}
            - @roles.each do |role|
              td
                - permission = role.permissions.find_by(permissible: folder)
                - if permission&.can_download?
                  a.permission-icon data-container="body" title="Disable view &<br/>download access" data-html="true" data-placement="bottom" data-toggle="tooltip" data-trigger="hover" data-permission-id="#{permission.id}" data-status="download"
                    i.material-icons-outlined.font-size-h1.icon-hover.cursor-pointer.mr-2 get_app
                - else
                  / Pass in role id for creating permission and permissible ID data attr
                  a.permission-icon id="#{role.id}" data-permissible-id="#{folder.id}" data-permissible-type="folder" data-container="body" title="Disable download<br/>access" data-html="true" data-placement="bottom" data-toggle="tooltip" data-trigger="hover" data-permission-id="#{permission&.id}" data-status="download"
                    i.material-icons-outlined.font-size-h1.text-muted.cursor-pointer.mr-2 file_download_off
          = render 'overture/shared/drawer', permissible: folder, permissible_type: 'folder', name: folder.name, url: overture_folders_path(id: folder.id, format: 'json'), file: folder, path: "overture/folders/", byte_size: Folder.last.descendants.select{|desc| desc.is_a?(Document)}.map{|doc| number_to_human_size(doc.raw_file.byte_size)}.reduce(0, :+)
        - @documents.each_with_index do |d, index|
          = render 'overture/documents/modals/version_control_modal', d: d
          tr.drawer-row.draggable id="#{d.id}" data-drawer="#{d.id}" data-permissible-type="document"
            td
              = check_box_tag "documents[]", d.id, false, class: "checkSingle mt-2"
            td.cursor-pointer data-toggle="modal" data-target="#documentModal#{d.id}"
              span.mr-5
                / Find extension (eg .docx, .pdf, .png), split to remove the . , and retrieve the 1st 3 letters to get doc, pdf, png to match the image
                = image_pack_tag "media/src/images/overture/doc.svg"
              span.ml-5
                = d.versions.attachments.find_by(current_version: true).filename
            td
              = d.updated_at.strftime("%d %b %Y")
            td
              .dropdown
                a.btn.btn-icon.btn-link href="#" aria-expanded="false" aria-haspopup="true" data-toggle="dropdown"
                  i.material-icons-outlined.font-size-h1.text-muted more_horiz
                .dropdown-menu.dropdown-menu-right
                  .dropdown-item = link_to "Version Control", "#", "data-toggle": "modal", 'data-target': "#versionControlModal_#{d.id}"
                  .dropdown-item = link_to "Activity History", "#", id: "drawer_toggle_#{d.id}_0"
                  .dropdown-item = link_to "Download", d.versions.attached? ? rails_blob_path(d.versions.attachments.find_by(current_version: true), disposition: "attachment") : d.file_url
                  .dropdown-item = link_to "Delete", overture_startups_document_path(d), method: :delete, data: {confirm: "Are you sure you want to delete this document?"}
            - @roles.each do |role|
              td
                - permission = role.permissions.find_by(permissible: d)
                - if permission&.can_download?
                  a.permission-icon data-container="body" title="Disable view &<br/>download access" data-html="true" data-placement="bottom" data-toggle="tooltip" data-trigger="hover" data-permission-id="#{permission.id}" data-status="download"
                    i.material-icons-outlined.font-size-h1.icon-hover.cursor-pointer.mr-2 get_app
                - else
                  / Pass in role id for creating permission and permissible ID data attr
                  a.permission-icon id="#{role.id}" data-permissible-id="#{d.id}" data-permissible-type="document" data-container="body" title="Disable download<br/>access" data-html="true" data-placement="bottom" data-toggle="tooltip" data-trigger="hover" data-permission-id="#{permission&.id}" data-status="download"
                    i.material-icons-outlined.font-size-h1.text-muted.cursor-pointer.mr-2 file_download_off
            = render 'overture/shared/show_document', current_version_document: d.versions.attachments.find_by(current_version: true), d: d
          = render 'overture/shared/drawer', permissible: d, permissible_type: 'document', name: d.raw_file.filename, url: overture_startups_documents_path(id: d.id, format: 'json'), path: "overture/startups/documents/", byte_size: number_to_human_size(d.raw_file.byte_size) if d.raw_file.attached?
