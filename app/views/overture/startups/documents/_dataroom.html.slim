.row.my-5
  .col-sm-4.d-flex.align-items-center
    = image_pack_tag 'media/src/images/overture/dataroom-lock-icon.png', alt: "dataroom-lock-icon", class: 'mr-5 text-dark'
    .header-font.text-dark Dataroom
  .col-sm-8.d-flex.justify-content-end
    .dropdown
      a.btn.btn-primary.float-right.mr-5.p-2 href="#" aria-expanded="false" aria-haspopup="true" data-toggle="dropdown"
        i.material-icons-outlined.font-size-h2.p-0.dataroom-tour-1 add
      .dropdown-menu.dropdown-menu-right
        a.dropdown-item.float-right.ml-5 data-target="#newFolderUpload" data-toggle="modal" type="button" Add new folder
        a.dropdown-item.float-right.ml-5 data-target="#newOvertureDocUploads" data-toggle="modal" type="button" Upload new file
    = render "overture/documents/modals/upload_documents_modal"
    / If in folder SHOW page, it should add a new folder instead
    - if controller_name == "folders"
      = render "overture/documents/modals/new_folder_modal", folder: @new_folder, parent_folder: @folder
    - else
      = render "overture/documents/modals/new_folder_modal", folder: @folder, parent_folder: nil
    = link_to overture_roles_path, role: 'button', class: 'btn btn-outline-secondary float-right mr-5 dataroom-tour-4' do
      i.material-icons-outlined.text-primary group
      span.ml-2.text-primary.font-weight-bolder Groups
    button.close.open-banner.text-dark.mr-3 type="submit"
      i.material-icons-outlined.float-right help_outline
= render 'overture/home/banners/startups/dataroom'
.row.p-3.mx-0.align-items-center#select-options style="background: #EEF1FF;"
  .col-md-9
    span.mr-5#selectedNumber
  .col-md-3.d-flex.justify-content-between
    .col-md-12
      a.groupDelete data-toggle="modal" data-target="#groupDelete"
        i.material-icons-outlined.cursor-pointer.float-right delete
      = render "overture/documents/modals/bulk_delete_modal"
      a.groupAssignment.cursor-pointer data-toggle="modal" data-target="#groupAssignPermissions"
        i.material-icons-outlined.cursor-pointer.float-right.mr-5 group_add
      = render "overture/documents/modals/bulk_assignment_permissions_modal"
.row.ml-4.my-5.align-items-center#filter-options
  .col.md-12
    span.mr-3
      = select_tag('access', options_for_select(["All access"].concat(@company.users.pluck(:first_name)), selected: params[:access], include_blank: true), class: 'select2 select2-document-access form-control')
    span.mr-3
      = select_tag('qna', options_for_select(["All Q&A Status", "Read", "Unread"], selected: params[:qna], include_blank: true), class: 'select2 select2-document-qna form-control')
    span.mr-3
      = button_tag 'Apply filters', type: 'button', class: 'btn btn-primary documents-filter-button'
    span.align-items-center.ml-5.text-primary#clear-filter style="cursor: pointer;"
      | Clear
- if controller_name == "folders"
  .row.mt-2
    .col
      ul.breadcrumb.breadcrumb-transparent.font-weight-bold.p-0.font-size-sm
        li.breadcrumb-item
          = link_to "Dataroom", overture_startups_documents_path, class: "text-dark"
        - @breadcrumb_folder_arrangement.each do |folder|
          li.breadcrumb-item
            = link_to folder.name, overture_folder_path(folder)
hr.m-0
- if @folders.empty? && @documents.empty?
  = render 'overture/home/empty_states/startups/dataroom'
- else
  .table-responsive.height-responsive
    table.table.ml-4.table-aligned
      thead
        tr.d-flex
          th style="min-width: 6%"
            input.checkboxSize#checkedAll type="checkbox" name=""/
          th.text-muted.col-6 Name
          th.text-muted.col-1 Last Modified
          / hide modifying documents and permissions if user has role member
          th.col style="min-width: 6%"
          - if current_user.has_role?(:admin, current_user.company)
            - @roles.each do |role|
              th.col.dataroom-tour-3.text-break style="min-width: 12%"
                a title="#{role.users.map(&:full_name).join("<br/>")}" data-html="true" data-placement="bottom" data-toggle="tooltip" data-trigger="hover" = role.name
          th
      tbody.draggable-zone
        - @folders.each_with_index do |folder, index|
          tr.draggable.folders.drawer-row.d-flex id="#{folder.id}" data-drawer=folder.id data-permissible-type="folder"
            td style="min-width: 6%"
              = check_box_tag "folders[]", folder.id, false, class: "checkSingle checkboxSize mt-2"
            td.col-6
              span.mr-5
                i.material-icons-outlined.align-middle.mt-1 folder_open
              span.ml-5
                = link_to folder.name, overture_folder_path(folder.id), class: "text-secondary"
            td.col-1
              .mt-2 = folder.updated_at.strftime("%d %b %Y")
            td.col style="min-width: 6%"
              .dropdown
                a.btn.btn-icon.btn-link href="#" aria-expanded="false" aria-haspopup="true" data-toggle="dropdown"
                  i.material-icons-outlined.font-size-h1.text-muted more_horiz
                .dropdown-menu.dropdown-menu-right
                  - if current_user.has_role?(:admin, current_user.company)
                    .dropdown-item = link_to "Folder Setting", edit_overture_folder_path(folder)
                    .dropdown-item = link_to "Activity History", "#", id: "drawer_toggle_#{folder.id}_0"
                    .dropdown-item = link_to "Delete", overture_folder_path(folder), method: :delete, data: {confirm: "Are you sure you want to delete folder?"}
                  - else
                    .dropdown-item = link_to "Activity History", "#", id: "drawer_toggle_#{folder.id}_0"
            - if current_user.has_role?(:admin, current_user.company)
              - @roles.each do |role|
                td.col.dataroom-tour-2 style="min-width: 12%"
                  = render "overture/documents/permissions_icons", role: role, permissible: folder, permissible_type: "folder"
            td
          = render 'overture/shared/drawer', permissible: folder, permissible_type: 'folder', name: folder.name, url: overture_folders_path(id: folder.id, format: 'json'), file: folder, path: "overture/folders/", byte_size: Folder.last.descendants.select{|desc| desc.is_a?(Document)}.map{|doc| number_to_human_size(doc.raw_file.byte_size)}.reduce(0, :+)
        - @documents.each_with_index do |d, index|
          tr.drawer-row.draggable.d-flex id="#{d.id}" data-drawer="#{d.id}" data-permissible-type="document"
            td style="min-width: 6%"
              = check_box_tag "documents[]", d.id, false, class: "checkSingle checkboxSize mt-2"
            td.cursor-pointer.col-6 data-toggle="modal" data-target="#documentModal#{d.id}"
              span.mr-5
                / Find extension (eg .docx, .pdf, .png), split to remove the . , and retrieve the 1st 3 letters to get doc, pdf, png to match the image
                = image_pack_tag "media/src/images/overture/doc.svg", class: "mt-1"
              span.ml-5.text-break 
                = d.versions.attachments.find_by(current_version: true)&.filename
            td.col-1
              .mt-2 = d.updated_at.strftime("%d %b %Y")
            td.col style="min-width: 6%"
              .dropdown
                a.btn.btn-icon.btn-link href="#" aria-expanded="false" aria-haspopup="true" data-toggle="dropdown"
                  i.material-icons-outlined.font-size-h1.text-muted more_horiz
                .dropdown-menu.dropdown-menu-right
                  - if current_user.has_role?(:admin, current_user.company)
                    .dropdown-item = link_to "Version Control", "#", "data-toggle": "modal", 'data-target': "#versionControlModal_#{d.id}"
                    .dropdown-item = link_to "Activity History", "#", id: "drawer_toggle_#{d.id}_0"
                    .dropdown-item = link_to "Download", d.versions.attached? ? rails_blob_path(d.versions.attachments.find_by(current_version: true), disposition: "attachment") : d.file_url
                    .dropdown-item = link_to "Delete", overture_startups_document_path(d), method: :delete, data: {confirm: "Are you sure you want to delete this document?"}
                  - else
                    .dropdown-item = link_to "Download", d.versions.attached? ? rails_blob_path(d.versions.attachments.find_by(current_version: true), disposition: "attachment") : d.file_url
            - if current_user.has_role?(:admin, current_user.company)
              - @roles.each do |role|
                td.col style="min-width: 12%"
                  = render "overture/documents/permissions_icons", role: role, permissible: d, permissible_type: "document"
            = render 'overture/shared/show_document', current_version_document: d.versions.attachments.find_by(current_version: true), d: d
            td
              = render 'overture/documents/modals/version_control_modal', d: d
          = render 'overture/shared/drawer', permissible: d, permissible_type: 'document', name: d.raw_file.filename, url: overture_startups_documents_path(id: d.id, format: 'json'), path: "overture/startups/documents/", byte_size: number_to_human_size(d.raw_file.byte_size) if d.raw_file.attached?
  = paginate @documents, views_prefix: 'dashboard'
