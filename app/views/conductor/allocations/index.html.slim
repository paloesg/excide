.row
  .col-sm-12
    ol.breadcrumb
      li.breadcrumb-item.ml-auto
        a href="/conductor" Dashboard
      li.breadcrumb-item
        a href="/symphony/company" #{@company.name}
      li.breadcrumb-item.active Allocations
    h1
      | Allocate Associate

.row
  .col-md-8.col-xs-12
    .card
      h4.card-header
        = @date_from.strftime("%B %Y")
        .btn-group.float-right role='group'
          = link_to "?start_date=#{params[:start_date].present? ? Date.parse(params[:start_date]).beginning_of_month.prev_month : Date.current.beginning_of_month.prev_month}", type: 'button', class: 'btn btn-sm btn-outline-secondary'
            i.fa.fa-chevron-left
            | Previous Month
          = link_to "?start_date=#{Date.current.beginning_of_month}", type: 'button', class: 'btn btn-sm btn-outline-secondary'
            | Current Month
          = link_to "?start_date=#{params[:start_date].present? ? Date.parse(params[:start_date]).beginning_of_month.next_month : Date.current.beginning_of_month.next_month}", type: 'button', class: 'btn btn-sm btn-outline-secondary'
            | Next Month
            i.fa.fa-chevron-right
      .table-responsive
        table.table.table-hover
          thead
            tr
              th Event
              th Allocation date
              th Start time
              th End time
              th Type
              th User
              th Rate
              th

          tbody
            - @allocations.each do |allocation|
              tr data-allocation='#{allocation.id}' class="#{@allocation == allocation ? 'info' : ''}"
                td = allocation.event.name
                td = allocation.allocation_date
                td = allocation.start_time.strftime("%H:%M")
                td = allocation.end_time.strftime("%H:%M")
                td = allocation.consultant? ? 'Consultant' : 'Associate'
                td = allocation.user&.full_name
                td = allocation.rate
                td = link_to 'Edit', edit_conductor_allocation_path(allocation)

  .col-md-4.col-xs-12
    = link_to 'Export ' + @date_from.strftime("%B") + ' Allocations', {action: :export, start_date: params[:start_date]} ,class: 'btn btn-success btn-block'
    br
    .card
      h5.card-header Available Associate
      ul.list-group
        - if params[:allocation].nil?
          li.list-group-item.clearfix Select an allocation on the left to assign associate.
        - elsif @users.empty?
          li.list-group-item.clearfix No associate available for this assignment.
        - @users.each do |user|
          li.list-group-item.clearfix
            .row
              .col-sm-8.col-12
                span.fa.fa-user aria-hidden="true"
                ' #{user.full_name}
                - if user.has_role? :consultant, :any
                  span.badge.badge-secondary IC
                  '
                span.badge.badge-warning #{(user.weekly_allocated_hours @allocation).to_i} Hours Allocated
                | &nbsp;
                - if @allocation.user == user
                  span.badge.badge-success Assigned
              - if @allocation.user == user
                .col-sm-4.col-12
                  = label_tag 'last_minute', class: 'checkbox-inline float-left' do
                    = check_box_tag 'last_minute', @allocation.id, @allocation.last_minute, data: { remote: true, url: url_for(action: :last_minute, id: @allocation.id), method: "POST" }, :onclick => "this.checked=true;"
                    |  Last Min.
                  = button_to 'Remove', conductor_allocation_path(@allocation), remote: true, method: :patch, role: 'button', class: 'btn btn-danger btn-sm float-right', params: { 'allocation[user_id]': nil}
              - else
                .col-sm-4.col-12
                  - if user.max_hours_per_week.present? and (user.max_hours_per_week <= (user.weekly_allocated_hours(@allocation) + @allocation.hours))
                    = button_to 'Hours Exceeded', {}, disabled: true, role: 'button', class: 'btn btn-sm float-right'
                  - elsif user.get_availability(@allocation).allocations.include?(@allocation) or user.get_availability(@allocation).allocations.where("allocations.start_time < ?", @allocation.end_time).where("allocations.end_time > ?", @allocation.start_time).present?
                    = button_to 'Assign', {}, disabled: true, role: 'button', class: 'btn btn-sm float-right'
                  - else
                    = button_to 'Assign', conductor_allocation_path(@allocation), remote: true, method: :patch, role: 'button', class: 'btn btn-primary btn-sm float-right', params: { 'allocation[user_id]': user.id}

javascript:
  $("tr[data-allocation]").click(function() {
    url = new URL(location)
    params =  new URLSearchParams(url.search.slice(1))
    params.set('allocation', $(this).data('allocation'))
    Turbolinks.visit('//' + location.host + location.pathname + '?' + params);
  })