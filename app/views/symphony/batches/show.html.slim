.row.mb-3
  .col
    h1 Batch #{@batch.name}
.row
  .col-xl-12
    - @batch.template.sections.each do |section|
      .kt-portlet
        .kt-portlet__head
          .kt-portlet__head-label
            h3.kt-portlet__head-title
              | #{section.section_name} - #{section.tasks.count.to_s} tasks
              - if @batch.failed_blob['blobs'].present?
                a.pop.ml-2 data-container="body" title="" data-original-title="#{@batch.failed_blob['blobs'].count} files has failed to be processed successfully. Please contact admin for support." data-html="true" data-placement="top" data-toggle="kt-tooltip" data-trigger="hover"
                  i.fa.fa-info-circle.text-danger
          .kt-portlet__head-toolbar
            .kt-portlet__head-actions
              - if @batch.complete?
                .pull-right #{@completed} of #{@batch.workflows.count} files completed
              - else
                .pull-right #{@files_count.to_i - @batch.workflows.count} of #{@files_count} files are still being processed but you may start on your tasks first.
        .kt-portlet__body
          .kt-widget11
            .table-responsive
              table.table
                thead
                  tr
                    th Filename
                    th
                    - section.tasks.includes(:role).order(position: :asc).each do |task|
                      th
                        .header-properties
                          ' #{task.task_type.humanize}
                          a.pop data-container="body" title="" data-original-title=task.instructions data-html="true" data-placement="top" data-toggle="kt-tooltip" data-trigger="hover"
                            i.fa.fa-info-circle
                        .header-info
                          ' #{task.role.name.humanize}
                tbody
                  - @batch.workflows.includes(:documents, :invoice, :template, :company).order(created_at: :asc).each do |wf|
                    tr
                      / Only show the processing buttons and line when workflow_actions are created
                      - if wf.documents.empty? and wf.workflow_actions.present?
                        td
                          / i.ti-file.icon.mr-3.text-center.large-icon.gray-icon
                          | Document is still processing
                        td
                          .btn-group.btn-group-sm
                            button class="btn btn-secondary flaticon2-search-1" disabled=""
                            button class="btn btn-secondary flaticon2-paper" disabled=""
                            button class="btn btn-secondary flaticon2-rubbish-bin text-danger" disabled=""
                      - else
                        - wf.documents.each do |d|
                          td.align-middle
                            / Check if raw file is attached. If it's not (like the older documents), display the filename instead
                            - if d.raw_file.attached?
                              = d.raw_file.blob.filename
                            - elsif d.filename.present?
                              = d.filename
                            - else
                              | File uploading failed!
                          td
                            .btn-group.btn-group-sm
                              - if d.converted_images.attached?
                                / To prevent getting error message, check if converted image is attached before displaying. This is because activejob might take longer to convert than rails creating the batches.
                                - display_url = url_for(d.converted_images.first)
                                a data-container="body" data-toggle="popover" tabindex="0" data-trigger="focus" data-html="true" data-content="<img src='#{display_url}' class='img-fluid'/>" class="btn btn-secondary flaticon2-search-1"
                              - else
                                button class="btn btn-secondary flaticon2-search-1" disabled=""
                              - if wf.invoice.blank?
                                button class="btn btn-secondary flaticon2-paper" disabled=""
                              - else
                                = link_to "", symphony_invoice_path(workflow_name: wf.template.slug, workflow_id: wf.friendly_id, id: wf.invoice.id), class: 'btn btn-secondary flaticon2-paper'
                                - if wf.invoice.rejected?
                                  .rejected-invoice-circle R
                              = link_to "", symphony_workflow_path(workflow_name: wf.template.slug, workflow_id: wf.id), method: :delete, data: { confirm: 'Are you sure?' }, remote: true, role: 'button', remote: true, class: 'btn btn-secondary flaticon2-rubbish-bin text-danger'
                      - section.tasks.includes(:role).order(position: :asc).each do |task|
                        td class="text-center #{'important-task' if task.important}"
                          = render "symphony/batches/tasks/#{task.task_type}", workflow: wf, action: task.get_workflow_action(wf.company, wf.id) if task.get_workflow_action(wf.company, wf.id).present?
