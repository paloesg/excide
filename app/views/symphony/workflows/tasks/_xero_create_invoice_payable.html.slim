tr
  td = task.display_position
  td
    = task.instructions
  td
    - if action.assigned_user.present?
      span.fa.fa-user aria-hidden="true"
      |  #{action.assigned_user&.full_name}
    - else
      = task.display_role
  td = action.deadline.try(:strftime, "%d/%m/%Y") || '-'
  td
  	= render "symphony/workflows/tasks/workflow_type_conditions", action: action, task: task
  td
    a data-toggle="collapse" href="#task_#{task.id}" aria-expanded="#{task == @workflow.current_task ? 'true' : 'false'}" class="#{task == @workflow.current_task ? '' : 'collapsed'}"
      i.fa aria-hidden="true"
tr
  td.p-0.border-top-0 colspan="6"
    div id="task_#{task.id}" class="#{task == @workflow.current_task ? 'collapse show' : 'collapse'}"
      .m-3
        h6 Actions:
        .btn-toolbar role="toolbar"
          .btn-group.mr-2 role="group" aria-label="Task actions"
            - params = {\
              date: @workflow.data.select {|attribute| attribute.name == "*InvoiceDate"}.first&.value,
              due_date: @workflow.data.select {|attribute| attribute.name == "*DueDate"}.first&.value,
              description: @workflow.data.select {|attribute| attribute.name == "Description"}.first&.value,
              quantity: @workflow.data.select {|attribute| attribute.name == "*Quantity"}.first&.value,
              price: @workflow.data.select {|attribute| attribute.name == "*UnitAmount"}.first&.value,
              account: @workflow.data.select {|attribute| attribute.name == "Account"}.first&.value,
              }
            / = @workflow.workflowable.xero_contact_id.present? ? link_to("Create Xero Invoice", xero_create_invoice_payable_symphony_workflow_path(@workflow.template.slug, @workflow.identifier, params), method: 'post', role: 'button', class: 'btn btn-primary btn-sm') : link_to('Add Client to Xero', xero_create_symphony_client_path(@workflow.workflowable.id), method: 'post', class: 'btn btn-primary btn-sm')
            = link_to "Fix Data", data_entry_symphony_workflow_path(workflow_identifier: @workflow.identifier), role: 'button', class: 'btn btn-danger btn-sm ml-2'
          .btn-group.mr-2 role="group" aria-label="Reminder actions"
            - if action.reminders.present?
              = link_to "Stop Reminder", stop_reminder_symphony_workflow_path(action.workflow.template.slug, action.workflow.identifier, task.id), method: :post, remote: true, class: 'btn btn-danger btn-sm'
            - if task == @workflow.current_task && (@user.has_role? :admin, @company)
              = link_to "Send Reminder", reminder_task_symphony_workflow_path(task_id: task.id, action_id: action.id), method: :post, remote: true , class: 'btn btn-warning btn-sm'
      .m-3
        = render "symphony/workflows/tasks/remarks", action: action