= render "symphony/workflows/tasks/show_information", action: action, task: task

tr
  td.p-0.border-top-0 colspan="6"
    div id="task_#{task.id}" class="#{task == @workflow.current_task or @workflow.template.unordered? ? 'collapse show' : 'collapse'}"
      .m-3
        h6 Actions:
        .btn-toolbar role="toolbar"
          .btn-group.mr-2 role="group" aria-label="Task actions"
            - if @workflow.invoice.present?
              = link_to "Invoice Approved", edit_symphony_invoice_path(workflow_name: @workflow.template.slug, workflow_id: @workflow.id, id: @workflow.invoice.id), class: 'btn btn-success btn-sm mr-2 disabled' if @workflow.invoice.xero_approved? or @workflow.invoice.xero_awaiting_approval?
              = link_to "Check & Approve Invoice", edit_symphony_invoice_path(workflow_name: @workflow.template.slug, workflow_id: @workflow.id, id: @workflow.invoice.id, workflow_action_id: action.id), class: 'btn btn-success btn-sm mr-2' if @workflow.invoice.created?
              = link_to "Delete Invoice", symphony_invoice_path(workflow_id: params[:workflow_id], id: @workflow.invoice.id), method: :delete, class: 'btn btn-danger btn-sm', data: { confirm: 'Are you sure you want to delete this invoice?' }
            - else
              = link_to "No invoice found", '#', role: 'button', class: 'btn btn-success btn-sm disabled'
          .btn-group.mr-2 role="group" aria-label="Reminder actions"
            / the below condition checks whether user is admin. If template is ordered, it will check whether the task is the current task and if unordered, it will check whether the workflowaction is uncompleted.
            - if (@user.has_role? :admin, @company) && (task == @workflow.current_task || (@workflow.template.unordered? && !action.completed))
              = link_to "Send Reminder", reminder_task_symphony_workflow_path(task_id: task.id, action_id: action.id), method: :post, remote: true , class: 'btn btn-warning btn-sm mr-2'
            - if action.reminders.any?(&:next_reminder) && task.set_reminder?
              = link_to "Stop Reminder", stop_reminder_symphony_workflow_path(action.workflow.template.slug, action.workflow.id, task.id), method: :post, remote: true, class: 'btn btn-danger btn-sm'
        br
        = render "symphony/workflows/tasks/remarks", action: action
        br
        = task.display_image
