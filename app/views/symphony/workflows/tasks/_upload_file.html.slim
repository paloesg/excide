= render "symphony/workflows/tasks/show_information", action: action, task: task

tr
  td.p-0.border-top-0 colspan="6"
    div id="task_#{task.id}" class="#{task == @workflow.current_task or @workflow.template.unordered? ? 'collapse show' : 'collapse'}"
      .m-3
        h6 Actions:
        .btn-toolbar role="toolbar"
          .btn-group.mr-2 role="group" aria-label="Task actions"
            = link_to "Upload File", new_symphony_document_path(workflow: @workflow.id, workflow_action: action.id, upload_type: 'file-upload-task'), role: 'button', class: 'btn btn-primary btn-sm'
          .btn-group.mr-2 role="group" aria-label="Reminder actions"
            / the below condition checks whether user is admin. If template is ordered, it will check whether the task is the current task and if unordered, it will check whether the workflowaction is uncompleted.
            - if (@user.has_role? :admin, @company) && (task == @workflow.current_task || (@workflow.template.unordered? && !action.completed))
              = link_to "Send Reminder", reminder_task_symphony_workflow_path(task_id: task.id, action_id: action.id), method: :post, remote: true , class: 'btn btn-warning btn-sm mr-2'
            - if action.reminders.any?(&:next_reminder) && task.set_reminder?
              = link_to "Stop Reminder", stop_reminder_symphony_workflow_path(action.workflow.template.slug, action.workflow.id, task.id), method: :post, remote: true, class: 'btn btn-danger btn-sm'
        - if action.documents.present?
          br
          .row
            .col-md-12
              h6 Uploaded file:
              .workflow-action-documents
                - action.documents.each do |d|
                  .media
                    .align-self-center
                      = link_to symphony_document_path(d)
                        = fa_icon "file", style: 'font-size: 50px;', class: 'mr-3'
                    .media-body
                      h5.text-truncate = d.filename
                      h6.card-subtitle = d.user&.full_name
                      .text-muted = d.created_at.strftime("Uploaded at %d/%m/%Y %R")
        br
        = render "symphony/workflows/tasks/remarks", action: action
        br
        = task.display_image
