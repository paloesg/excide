td = task.display_position
td
  = task.instructions
  = task.display_image
td
  .btn-toolbar
    = link_to "Upload File", new_symphony_document_path(workflow: @workflow.identifier), role: 'button', class: 'btn btn-primary btn-sm'
    - if task == @workflow.current_task && (@user.has_role? :admin, @company)
      = link_to "Send Reminder", reminder_task_symphony_workflow_path(task_id: task.id, action_id: action.id), method: :post, remote: true , class: 'btn btn-warning btn-sm'
td
  - if action.assigned_user.present?
    span.fa.fa-user aria-hidden="true"
    |  #{action.assigned_user&.full_name}
  - else
    = task.display_role
td = action.deadline.try(:strftime, "%d/%m/%Y") || '-'
td
  / Check if task is current task AND check if it's assigned to a particular user OR whether user has the required role OR user has admin role
  - if task == @workflow.current_task && (action.assigned_user == current_user || task.role_id == nil || (@roles.map(&:id).include? task.role_id) || (@user.has_role? :admin, @company))
    = check_box_tag 'completed', action.id, action.completed, data: { remote: true, url: url_for(action: :toggle, task_id: task.id), method: "POST" }, :onclick => "this.checked=true;"
  - else
    = check_box_tag 'completed', action.id, action.completed, disabled: true
td
  a data-toggle="task_popover" rel="popover" title="Task details" task-details="{ "next_reminder" : "#{action.reminders.take&.next_reminder&.strftime('%F')}", "completed_by" : "#{action.completed_user&.full_name}", "completed_on" : "#{action.updated_at.strftime('%F %R') if action.completed }", "task_id": "#{task.id}", "action_id": "#{action.id}", "set_reminder": #{task.set_reminder} }"
    i.fa.fa-chevron-circle-down